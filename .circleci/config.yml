version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
    environment:
      RAILS_ENV: test
      NODE_ENV: test
    steps:
      - checkout
      - run:
          name: update docker-compose
          command: pip install docker-compose==1.22.0
      - run:
          name: check docker-compose version
          command: docker-compose --version
      # NOTE If you want to use cache for faster testing, please comment out here.
      # - restore_cache:
      #     keys:
      #       - v3-test-{{ checksum "Dockerfile" }}
      #     paths:
      #       - ~/caches/images.tar
      # - run:
      #     name: docker load or build
      #     command: |
      #       if [[ -e ~/caches/images.tar ]]; then
      #         docker load -i ~/caches/images.tar
      #       else
      #         docker-compose -p docker_rails_sample build
      #       fi
      - run:
          name: docker-compose build
          command: docker-compose -p docker_rails_sample build
      # - run:
      #     name: docker save
      #     command: |
      #       mkdir -p ~/caches
      #       if [[ ! -e ~/caches/images.tar ]]; then
      #         docker save -o ~/caches/images.tar $(docker images --filter "dangling=false" --format "docker_rails_sample_rails:latest")
      #       fi
      # - save_cache:
      #     key: v3-test-{{ checksum "Dockerfile" }}
      #     paths:
      #       - ~/caches/images.tar
      - run:
          name: docker-compose -p docker_rails_sample run --rm rails bundle install
          command: docker-compose -p docker_rails_sample run --rm rails bundle install
      - run:
          name: docker-compose -p docker_rails_sample run --rm webpack yarn install
          command: docker-compose -p docker_rails_sample run --rm webpack yarn install
      - run:
          name: docker-compose up
          command: docker-compose -p docker_rails_sample up -d
      - run:
          name: docker exec docker_rails_sample_rails_1 bundle exec rake assets:precompile
          command: docker exec docker_rails_sample_rails_1 bundle exec rake assets:precompile
      - run:
          name: docker exec docker_rails_sample_rails_1 bin/setup
          command: docker exec docker_rails_sample_rails_1 bin/setup
            # Download test-reporter
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: bundle exec rspec spec
          command: docker exec docker_rails_sample_rails_1 bash -c './cc-test-reporter before-build && bundle exec rspec spec && ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $? && mkdir -p /app/tmp/capybara && mkdir -p /app/coverage'
      - run:
          name: Copy artifacts
          command: |
            mkdir -p /tmp/artifacts/capybara
            docker cp docker_rails_sample_rails_1:/app/tmp/capybara "/tmp/artifacts/"
            mkdir -p /tmp/artifacts/coverage
            docker cp docker_rails_sample_rails_1:/app/coverage "/tmp/artifacts/"
          when: always
      - store_artifacts:
          path: /tmp/artifacts
          when: always
      - run:
          name: docker-compose down
          command: docker-compose down
workflows:
  version: 2
  build:
    jobs:
      - build
